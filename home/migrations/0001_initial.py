# Generated by Django 3.0.2 on 2020-04-03 03:50

import datetime
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Cheques',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('recipient', models.CharField(max_length=20)),
                ('amount', models.FloatField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Privilege',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('view_transaction', models.BooleanField()),
                ('create_transaction', models.BooleanField()),
                ('authorize_transaction', models.BooleanField()),
                ('transaction_type', models.CharField(max_length=20)),
                ('issue_check', models.BooleanField()),
                ('fund_transfer', models.BooleanField()),
                ('view_account', models.BooleanField()),
                ('create_account', models.BooleanField()),
                ('modify_account', models.BooleanField()),
                ('close_account', models.BooleanField()),
                ('delete_account', models.BooleanField()),
                ('access_logs', models.BooleanField()),
                ('user_type', models.CharField(max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='Tiers',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tier_status', models.CharField(choices=[('Tier_1', 'Tier_1'), ('Tier_2', 'Tier_2'), ('Admin', 'Admin')], max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Requests',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('request_date', models.DateTimeField()),
                ('request_subject', models.TextField()),
                ('request_assigned_to', models.IntegerField()),
                ('request_type', models.CharField(max_length=20)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Requests_User_id', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('street_address', models.CharField(max_length=20)),
                ('city', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^[a-zA-Z]*$', 'Only alphabetic characters are allowed.')])),
                ('state', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^[a-zA-Z]*$', 'Only alphabetic characters are allowed.')])),
                ('zip_code', models.IntegerField()),
                ('mobile_number', models.IntegerField(max_length=10, unique=True)),
                ('birthdate', models.DateTimeField()),
                ('ssn', models.IntegerField(max_length=9, unique=True)),
                ('joining_date', models.DateTimeField(default=datetime.datetime.now)),
                ('flag', models.BooleanField(default=False)),
                ('privilege_id', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, related_name='ProfilePrivilege', to='home.Privilege')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='Profile_User', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PendingProfileUpdate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^[a-zA-Z]*$', 'Only alphabetic characters are allowed.')])),
                ('last_name', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^[a-zA-Z]*$', 'Only alphabetic characters are allowed.')])),
                ('street_address', models.CharField(max_length=20)),
                ('city', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^[a-zA-Z]*$', 'Only alphabetic characters are allowed.')])),
                ('state', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^[a-zA-Z]*$', 'Only alphabetic characters are allowed.')])),
                ('zip_code', models.IntegerField()),
                ('flag', models.BooleanField(default=False)),
                ('user', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, related_name='Pprofile_User_id', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Appointment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('appointment_date', models.DateTimeField()),
                ('appointment_subject', models.TextField()),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Appointment_User', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Account',
            fields=[
                ('account_number', models.AutoField(primary_key=True, serialize=False)),
                ('account_type', models.CharField(choices=[('savings', 'SAVINGS'), ('checking', 'CHECKING'), ('credit_card', 'CREDIT_CARD')], max_length=20)),
                ('account_balance', models.FloatField(default=0)),
                ('creation_date', models.DateTimeField(default=datetime.datetime.now)),
                ('flag', models.BooleanField(default=False)),
                ('delete', models.BooleanField(default=False)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Account_User_id', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
